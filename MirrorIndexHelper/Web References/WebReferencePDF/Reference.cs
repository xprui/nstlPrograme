//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace MirrorIndexHelper.WebReferencePDF {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PDFTransmiterSoap", Namespace="http://tempuri.org/")]
    public partial class PDFTransmiter : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SeekForPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickUpFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PDFTransmiter() {
            this.Url = global::MirrorIndexHelper.Properties.Settings.Default.MirrorIndexHelper_WebReferencePDF_PDFTransmiter;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SeekForPDFCompletedEventHandler SeekForPDFCompleted;
        
        /// <remarks/>
        public event PickUpFileCompletedEventHandler PickUpFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeekForPDF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeekResult SeekForPDF(string uniqueIdCollection) {
            object[] results = this.Invoke("SeekForPDF", new object[] {
                        uniqueIdCollection});
            return ((SeekResult)(results[0]));
        }
        
        /// <remarks/>
        public void SeekForPDFAsync(string uniqueIdCollection) {
            this.SeekForPDFAsync(uniqueIdCollection, null);
        }
        
        /// <remarks/>
        public void SeekForPDFAsync(string uniqueIdCollection, object userState) {
            if ((this.SeekForPDFOperationCompleted == null)) {
                this.SeekForPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeekForPDFOperationCompleted);
            }
            this.InvokeAsync("SeekForPDF", new object[] {
                        uniqueIdCollection}, this.SeekForPDFOperationCompleted, userState);
        }
        
        private void OnSeekForPDFOperationCompleted(object arg) {
            if ((this.SeekForPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeekForPDFCompleted(this, new SeekForPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickUpFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PickUpFile(string uniqueID, bool OnlyStream) {
            this.Invoke("PickUpFile", new object[] {
                        uniqueID,
                        OnlyStream});
        }
        
        /// <remarks/>
        public void PickUpFileAsync(string uniqueID, bool OnlyStream) {
            this.PickUpFileAsync(uniqueID, OnlyStream, null);
        }
        
        /// <remarks/>
        public void PickUpFileAsync(string uniqueID, bool OnlyStream, object userState) {
            if ((this.PickUpFileOperationCompleted == null)) {
                this.PickUpFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickUpFileOperationCompleted);
            }
            this.InvokeAsync("PickUpFile", new object[] {
                        uniqueID,
                        OnlyStream}, this.PickUpFileOperationCompleted, userState);
        }
        
        private void OnPickUpFileOperationCompleted(object arg) {
            if ((this.PickUpFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickUpFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SeekResult {
        
        private bool validityField;
        
        private string informationField;
        
        private Seek[] resultField;
        
        /// <remarks/>
        public bool Validity {
            get {
                return this.validityField;
            }
            set {
                this.validityField = value;
            }
        }
        
        /// <remarks/>
        public string Information {
            get {
                return this.informationField;
            }
            set {
                this.informationField = value;
            }
        }
        
        /// <remarks/>
        public Seek[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Seek {
        
        private string uniqueIdField;
        
        private bool isFindedField;
        
        /// <remarks/>
        public string UniqueId {
            get {
                return this.uniqueIdField;
            }
            set {
                this.uniqueIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFinded {
            get {
                return this.isFindedField;
            }
            set {
                this.isFindedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SeekForPDFCompletedEventHandler(object sender, SeekForPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeekForPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeekForPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SeekResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SeekResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PickUpFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591